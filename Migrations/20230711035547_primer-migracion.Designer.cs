// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MontiniMotos.Models;

#nullable disable

namespace MontiniMotos.Migrations
{
    [DbContext(typeof(VentasDbContext))]
    [Migration("20230711035547_primer-migracion")]
    partial class primermigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MontiniMotos.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descr_categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("MontiniMotos.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido_cli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni_cli")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("MontiniMotos.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido_emp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dni_emp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre_emp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("MontiniMotos.Models.LineaOrdenDeCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("OrdenDeCompraId")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio_del_momento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RepuestoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdenDeCompraId");

                    b.HasIndex("RepuestoId");

                    b.ToTable("LineaOrdenDeCompras");
                });

            modelBuilder.Entity("MontiniMotos.Models.LineaSolicitudPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio_del_momento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RepuestoId")
                        .HasColumnType("int");

                    b.Property<int?>("SolicitudPedidoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RepuestoId");

                    b.HasIndex("SolicitudPedidoId");

                    b.ToTable("LineaSolicitudPedidos");
                });

            modelBuilder.Entity("MontiniMotos.Models.LineaVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio_del_momento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RepuestoId")
                        .HasColumnType("int");

                    b.Property<int?>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RepuestoId");

                    b.HasIndex("VentaId");

                    b.ToTable("LineaVentas");
                });

            modelBuilder.Entity("MontiniMotos.Models.OrdenDeCompra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrdenDeCompras");
                });

            modelBuilder.Entity("MontiniMotos.Models.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Proveedors");
                });

            modelBuilder.Entity("MontiniMotos.Models.Repuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cant_disponible")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nom_repuesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Repuestos");
                });

            modelBuilder.Entity("MontiniMotos.Models.SolicitudPedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cant_repuesto_a_pedir")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Montototal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Or_compraId")
                        .HasColumnType("int");

                    b.Property<int>("ProveedorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("Or_compraId");

                    b.HasIndex("ProveedorId");

                    b.ToTable("SolicitudPedidos");
                });

            modelBuilder.Entity("MontiniMotos.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total_venta")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("MontiniMotos.Models.LineaOrdenDeCompra", b =>
                {
                    b.HasOne("MontiniMotos.Models.OrdenDeCompra", null)
                        .WithMany("Linea_orden_compra")
                        .HasForeignKey("OrdenDeCompraId");

                    b.HasOne("MontiniMotos.Models.Repuesto", "Repuesto")
                        .WithMany()
                        .HasForeignKey("RepuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repuesto");
                });

            modelBuilder.Entity("MontiniMotos.Models.LineaSolicitudPedido", b =>
                {
                    b.HasOne("MontiniMotos.Models.Repuesto", "Repuesto")
                        .WithMany()
                        .HasForeignKey("RepuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MontiniMotos.Models.SolicitudPedido", null)
                        .WithMany("Linea_solic_pedido")
                        .HasForeignKey("SolicitudPedidoId");

                    b.Navigation("Repuesto");
                });

            modelBuilder.Entity("MontiniMotos.Models.LineaVenta", b =>
                {
                    b.HasOne("MontiniMotos.Models.Repuesto", "Repuesto")
                        .WithMany()
                        .HasForeignKey("RepuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MontiniMotos.Models.Venta", null)
                        .WithMany("Linea_venta")
                        .HasForeignKey("VentaId");

                    b.Navigation("Repuesto");
                });

            modelBuilder.Entity("MontiniMotos.Models.Repuesto", b =>
                {
                    b.HasOne("MontiniMotos.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("MontiniMotos.Models.SolicitudPedido", b =>
                {
                    b.HasOne("MontiniMotos.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MontiniMotos.Models.OrdenDeCompra", "Or_compra")
                        .WithMany()
                        .HasForeignKey("Or_compraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MontiniMotos.Models.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");

                    b.Navigation("Or_compra");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("MontiniMotos.Models.Venta", b =>
                {
                    b.HasOne("MontiniMotos.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MontiniMotos.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("MontiniMotos.Models.OrdenDeCompra", b =>
                {
                    b.Navigation("Linea_orden_compra");
                });

            modelBuilder.Entity("MontiniMotos.Models.SolicitudPedido", b =>
                {
                    b.Navigation("Linea_solic_pedido");
                });

            modelBuilder.Entity("MontiniMotos.Models.Venta", b =>
                {
                    b.Navigation("Linea_venta");
                });
#pragma warning restore 612, 618
        }
    }
}
